apiVersion: v1
kind: Template
labels:
  template: manageiq
metadata:
  name: manageiq
  annotations: 
    description: "ManageIQ appliance template"
    tags: "manageiq,quickstart,miq"
    iconClass: "icon-app-code"
objects:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: "Exposes and load balances ManageIQ pods"
    name: ${NAME}
  spec:
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80
    - name: https
      port: 443
      protocol: TCP
      targetPort: 443
    selector:
      name: ${NAME}
- apiVersion: v1
  kind: Route
  metadata:
    name: ${NAME}
  spec:
    port:
      targetPort: https
    tls:
      termination: passthrough
    to:
      kind: Service
      name: ${NAME}
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: manageiq
    annotations:
      description: "Keeps track of changes in the ManageIQ image"
  spec:
    dockerImageRepository: docker.io/fbladilo/manageiq
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: miq-pgdb-claim
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
         storage: 2Gi
- apiVersion: v1
  kind: "DeploymentConfig"
  metadata:
    name: ${NAME}
    annotations:
      description: "Defines how to deploy the ManageIQ appliance"
  spec:
    template:
      metadata:
        labels:
          name: ${NAME}
        name: ${NAME}
      spec:
        volumes:
        - name: miq-pgdb-volume
          persistentVolumeClaim:
            claimName: miq-pgdb-claim
        containers:
        - image: fbladilo/manageiq:latest
          imagePullPolicy: IfNotPresent
          name: manageiq
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 300
            timeoutSeconds: 3
          ports:
          - containerPort: 80
            protocol: TCP
          - containerPort: 443
            protocol: TCP
          volumeMounts:
          - name: miq-pgdb-volume
            mountPath: /var/opt/rh/rh-postgresql95/lib/pgsql/data
          securityContext:
            privileged: true
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 300
            timeoutSeconds: 3
    replicas: 1
    selector:
      name: ${NAME}
    triggers:
      - type: "ConfigChange"
      - type: "ImageChange"
        imageChangeParams:
          automatic: true
          containerNames:
            - "manageiq"
          from:
            kind: "ImageStreamTag"
            name: "manageiq:latest"
    strategy:
      type: Rolling
      rollingParams:
         timeoutSeconds: 960
parameters:
- description: The name assigned to all of the frontend objects defined in this template.
  displayName: Name
  name: NAME
  required: true
  value: manageiq
